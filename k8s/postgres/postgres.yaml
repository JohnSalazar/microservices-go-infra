apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: mymicroservices
type: Opaque
stringData:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: mymicroservices
  labels:
    app: postgres
data:
  POSTGRES_DB: products
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-server-state
  namespace: mymicroservices
  labels:
    app: postgres-server-state
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-server
  serviceName: "postgres-server-svc"
  template:
    metadata:
      name: postgres-server
      labels:
        app: postgres-server
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres-server
          image: postgres:13-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          resources:
            requests:
              cpu: "0.2"
              memory: 200Mi
          volumeMounts:
            - name: postgres-volume
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-volume
      namespace: mymicroservices
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-server-svc
  namespace: mymicroservices
  labels:
    app: postgres-server-svc
spec:
  selector:
    app: postgres-server
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
