version: "3.9"

networks:
  nats:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  mongodb_data_container: {}
  postgres_data_container: {}
  redis_data: {}
  certs_data: {}

services:
  consul-svc:
    container_name: consul-svc
    image: consul
    restart: unless-stopped
    ports:
      - "8500:8500"
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  prometheus-svc:
    container_name: prometheus-svc
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=200h"
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    depends_on:
      - cadvisor-svc
      - nodeexporter-svc
      - nginxexporter-svc
      - mongo-exporter-svc
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  alertmanager-svc:
    container_name: alertmanager-svc
    image: prom/alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - nats
    depends_on:
      - prometheus-svc
    labels:
      org.label-schema.group: "microservice"

  nodeexporter-svc:
    container_name: nodeexporter-svc
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  cadvisor-svc:
    container_name: cadvisor-svc
    image: gcr.io/cadvisor/cadvisor
    privileged: true
    user: root
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      # - /mnt/my-docker/version-pack-data/community/docker:/rootfs/var/lib/docker:ro
      # - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  grafana-svc:
    container_name: grafana-svc
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_HTTP_PORT=3001
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:/grafana
    restart: unless-stopped
    ports:
      - "3001:3001"
    networks:
      - nats
    depends_on:
      - prometheus-svc
    labels:
      org.label-schema.group: "microservice"

  pushgateway-svc:
    container_name: pushgateway-svc
    image: prom/pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - nats
    depends_on:
      - prometheus-svc
    labels:
      org.label-schema.group: "microservice"

  nginxexporter-svc:
    container_name: nginxexporter-svc
    image: nginx/nginx-prometheus-exporter
    expose:
      - 9113
    restart: unless-stopped
    environment:
      SCRAPE_URI: https://nginx-svc/stub_status
      SSL_VERIFY: "false"
    networks:
      - nats
    depends_on:
      - nginx-svc
    labels:
      org.label-schema.group: "microservice"

  nginx-svc:
    container_name: nginx-svc
    image: nginx
    # build:
    #   context: ./nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      # - ./nginx/localhost.crt:/etc/nginx/cert/localhost.crt
      # - ./nginx/localhost.key:/etc/nginx/cert/localhost.key
      - certs_data:/certs
    ports:
      - 80:80
      - 443:443
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  jaeger-collector-svc:
    container_name: jaeger-collector-svc
    restart: always
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      QUERY_BASE_PATH: /jaeger
    depends_on:
      - nginx-svc
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  mongo-exporter-svc:
    container_name: mongo-exporter-svc
    image: bitnami/mongodb-exporter
    ports:
      - "9216:9216"
    command:
      [
        "--discovering-mode",
        "--compatible-mode",
        "--mongodb.direct-connect=false",
      ]
    environment:
      MONGODB_URI: mongodb://mongodb_exporter:mongodb@mongodb-server-svc:27017/admin?ssl=false
    networks:
      - nats
    restart: always
    depends_on:
      - mongodb-server-svc
    labels:
      org.label-schema.group: "microservice"

  nats-streaming-svc:
    container_name: nats-streaming-svc
    image: nats
    volumes:
      - certs_data:/certs
    # command: ['-m', '8222', '-js', '--tls', '--tlscert=/certs/localhost.crt', '--tlskey=/certs/localhost.key', '--tlscacert=/certs/ca_localhost.crt']
    command:
      [
        "-m",
        "8222",
        "-js",
        "--tls",
        "--tlscert=/certs/localhost.crt",
        "--tlskey=/certs/localhost.key",
      ]
    ports:
      - "4222:4222"
      - "8222:8222"
      - "6222:6222"
    networks:
      - nats
    restart: always
    labels:
      org.label-schema.group: "microservice"

  # nats-streaming:
  #   container_name: nats-streaming
  #   image: nats-streaming:latest
  #   ports:
  #     - "4222:4222"
  #     - "8222:8222"
  #     - "6222:6222"
  #   networks:
  #     - nats
  #   restart: always
  #   command: [
  #       '-p',
  #       '4222',
  #       '-m',
  #       '8222',
  #       '-hbi',
  #       '5s',
  #       '-hbt',
  #       '5s',
  #       '-hbf',
  #       '2',
  #       '-SD',
  #       '-cid',
  #       'microservice',
  #   ]
  #   labels:
  #     org.label-schema.group: "microservice"

  mailhog-smtp-svc:
    container_name: mailhog-smtp-svc
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: unless-stopped
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  postgres-server-svc:
    container_name: postgresql-server-svc
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # - POSTGRES_DB=products
      # - POSTGRES_HOST=5432
    command: -p 5432
    volumes:
      - postgres_data_container:/var/lib/postgresql/data
    networks:
      - "nats"
    labels:
      org.label-schema.group: "microservice"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    depends_on:
      - postgres-server-svc
    networks:
      - "nats"
    labels:
      org.label-schema.group: "microservice"

  mongodb-server-svc:
    container_name: mongodb-server-svc
    image: mongo
    ports:
      - "27017:27017"
    # command: mongod --port 27017 --oplogSize 16
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  redis-server-svc:
    container_name: redis-server-svc
    image: redislabs/redisearch:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - certs_data:/certs
    # environment:
    #   - REDIS_TLS_CERT_FILE=/certs/localhost.crt
    #   - REDIS_TLS_KEY_FILE=/certs/localhost.key
    #   - REDIS_TLS_CA_FILE=/certs/ca_localhost.crt
    #   - REDIS_TLS_ENABLED=yes
    #   - REDIS_TLS_PORT=6379
    command:
      [
        "redis-server",
        "--loadmodule",
        "/usr/lib/redis/modules/redisearch.so",
        "--appendonly",
        "yes",
        "--aof-use-rdb-preamble",
        "yes",
      ]
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis-server-svc:6379
    ports:
      - "8081:8081"
    networks:
      - nats
    labels:
      org.label-schema.group: "microservice"

  authentication-svc:
    # deploy:
    #   replicas: 3
    container_name: authentication-svc
    image: authentications
    environment:
      HASHPERMISSIONENDPOINT: ${HASHPERMISSIONENDPOINT}
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
      MONGO_USER: mongo
      MONGO_PASSWORD: mongo
      MONGO_EXPORTER_USER: mongodb_exporter
      MONGO_EXPORTER_PASSWORD: mongodb
      PROMETHEUS_PUSHGATEWAY: http://localhost:9091/
    ports:
      # - '5101-5110:5100'
      - "5100:5100"
    volumes:
      - certs_data:/certs
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - nats-streaming-svc
      - mailhog-smtp-svc
      - mongodb-server-svc
    labels:
      org.label-schema.group: "microservice"

  cart-svc:
    container_name: cart-svc
    image: carts
    environment:
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
      MONGO_USER: mongo
      MONGO_PASSWORD: mongo
      MONGO_EXPORTER_USER: mongodb_exporter
      MONGO_EXPORTER_PASSWORD: mongodb
      PROMETHEUS_PUSHGATEWAY: http://localhost:9091/
    ports:
      - "5500:5500"
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - nats-streaming-svc
      - mailhog-smtp-svc
      - mongodb-server-svc
      - authentication-svc
    labels:
      org.label-schema.group: "microservice"

  customer-svc:
    container_name: customer-svc
    image: customers
    environment:
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
      MONGO_USER: mongo
      MONGO_PASSWORD: mongo
      MONGO_EXPORTER_USER: mongodb_exporter
      MONGO_EXPORTER_PASSWORD: mongodb
      PROMETHEUS_PUSHGATEWAY: http://localhost:9091/
    ports:
      - "5300:5300"
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - nats-streaming-svc
      - mailhog-smtp-svc
      - mongodb-server-svc
      - authentication-svc
    labels:
      org.label-schema.group: "microservice"

  email-svc:
    # deploy:
    #   replicas: 3
    container_name: email-svc
    image: emails
    environment:
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
      SMTP_SERVER_USER:
      SMTP_SERVER_PASSWORD:
      PROMETHEUS_PUSHGATEWAY: http://localhost:9091/
    ports:
      - "52000:52000"
      - "53000:53000"
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - authentication-svc
    labels:
      org.label-schema.group: "microservice"

  order-svc:
    container_name: order-svc
    image: orders
    environment:
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
      MONGO_USER: mongo
      MONGO_PASSWORD: mongo
      MONGO_EXPORTER_USER: mongodb_exporter
      MONGO_EXPORTER_PASSWORD: mongodb
      PROMETHEUS_PUSHGATEWAY: http://localhost:9091/
    ports:
      - "5600:5600"
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - nats-streaming-svc
      - mailhog-smtp-svc
      - mongodb-server-svc
      - authentication-svc
    labels:
      org.label-schema.group: "microservice"

  payment-svc:
    container_name: payment-svc
    image: payments
    environment:
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
      MONGO_USER: mongo
      MONGO_PASSWORD: mongo
      MONGO_EXPORTER_USER: mongodb_exporter
      MONGO_EXPORTER_PASSWORD: mongodb
      PROMETHEUS_PUSHGATEWAY: http://localhost:9091/
    ports:
      - "5700:5700"
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - nats-streaming-svc
      - mailhog-smtp-svc
      - mongodb-server-svc
      - authentication-svc
    labels:
      org.label-schema.group: "microservice"

  product-svc:
    container_name: product-svc
    image: products
    environment:
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
      MONGO_USER: mongo
      MONGO_PASSWORD: mongo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      MONGO_EXPORTER_USER: mongodb_exporter
      MONGO_EXPORTER_PASSWORD: mongodb
      PROMETHEUS_PUSHGATEWAY: http://localhost:9091/
    ports:
      - "5400:5400"
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - nats-streaming-svc
      - mailhog-smtp-svc
      - postgres-server-svc
      - mongodb-server-svc
      - redis-server-svc
      - authentication-svc
    labels:
      org.label-schema.group: "microservice"

  web-svc:
    # deploy:
    #   replicas: 3
    container_name: web-svc
    image: web
    environment:
      PASSWORDPERMISSIONENDPOINT: 6L8awtp6@wi0QeD@*xym
    ports:
      # - '3002-3010:3000'
      - "3000:3000"
    restart: unless-stopped
    networks:
      - nats
    depends_on:
      - consul-svc
      - authentication-svc
      # - product-svc
    labels:
      org.label-schema.group: "microservice"
